<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.customer.mapper.CustomerMapper">
    
    <resultMap type="Customer" id="CustomerResult">
        <result property="customerId"    column="customer_id"    />
        <result property="customerName"    column="customer_name"    />
        <result property="sex"    column="sex"    />
        <result property="age"    column="age"    />
        <result property="createUser"    column="create_user"    />
        <result property="phonenumber"    column="phonenumber"    />
        <result property="customerSource"    column="customer_source"    />
        <result property="industry"    column="industry"    />
        <result property="level"    column="level"    />
        <result property="province"    column="province"    />
        <result property="city"    column="city"    />
        <result property="region"    column="region"    />
        <result property="workLocation"    column="work_location"    />
        <result property="detailLocation"    column="detail_location"    />
        <result property="status"    column="status"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="workProvince" column="work_province"/>
        <result property="workCity" column="work_city"/>
        <result property="workRegion" column="work_region"/>
        <result property="userName" column="userName"/>

    </resultMap>

    <sql id="selectCustomerVo">
        select customer_id, customer_name, c.sex, c.age, create_user, c.phonenumber,
               customer_source, industry, c.level, province, city, region, work_location,
               detail_location, c.status, c.del_flag, c.create_by, c.create_time, c.update_by,
               c.update_time,work_province,work_city,work_region, u.nick_name userName
              from oa_customer as c left join sys_user as u on c.create_user = u.user_id
    </sql>

    <select id="selectCustomerList" parameterType="Customer" resultMap="CustomerResult">
        <include refid="selectCustomerVo"/>
        <where>  
            <if test="customerName != null  and customerName != ''"> and customer_name like concat('%', #{customerName}, '%')</if>
            <if test="sex != null "> and sex = #{sex}</if>
            <if test="age != null "> and age = #{age}</if>
            <if test="createUser != null "> and create_user = #{createUser}</if>
            <if test="phonenumber != null  and phonenumber != ''"> and phonenumber = #{phonenumber}</if>
            <if test="customerSource != null "> and customer_source = #{customerSource}</if>
            <if test="industry != null "> and industry = #{industry}</if>
            <if test="level != null "> and level = #{level}</if>
            <if test="province != null  and province != ''"> and province = #{province}</if>
            <if test="city != null  and city != ''"> and city = #{city}</if>
            <if test="region != null  and region != ''"> and region = #{region}</if>
            <if test="workLocation != null  and workLocation != ''"> and work_location = #{workLocation}</if>
            <if test="detailLocation != null  and detailLocation != ''"> and detail_location = #{detailLocation}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectCustomerByCustomerId" parameterType="Long" resultMap="CustomerResult">
        <include refid="selectCustomerVo"/>
        where customer_id = #{customerId}
    </select>
        
    <insert id="insertCustomer" parameterType="Customer" useGeneratedKeys="true" keyProperty="customerId">
        insert into oa_customer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="customerName != null and customerName != ''">customer_name,</if>
            <if test="sex != null">sex,</if>
            <if test="age != null">age,</if>
            <if test="createUser != null">create_user,</if>
            <if test="phonenumber != null">phonenumber,</if>
            <if test="customerSource != null">customer_source,</if>
            <if test="industry != null">industry,</if>
            <if test="level != null">level,</if>
            <if test="province != null">province,</if>
            <if test="city != null">city,</if>
            <if test="region != null">region,</if>
            <if test="workLocation != null">work_location,</if>
            <if test="workProvince != null">work_province,</if>
            <if test="workCity != null">work_city,</if>
            <if test="workRegion != null">work_region,</if>
            <if test="detailLocation != null">detail_location,</if>
            <if test="status != null">status,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="customerName != null and customerName != ''">#{customerName},</if>
            <if test="sex != null">#{sex},</if>
            <if test="age != null">#{age},</if>
            <if test="createUser != null">#{createUser},</if>
            <if test="phonenumber != null">#{phonenumber},</if>
            <if test="customerSource != null">#{customerSource},</if>
            <if test="industry != null">#{industry},</if>
            <if test="level != null">#{level},</if>
            <if test="province != null">#{province},</if>
            <if test="city != null">#{city},</if>
            <if test="region != null">#{region},</if>
            <if test="workLocation != null">#{workLocation},</if>
            <if test="workProvince != null">#{workProvince},</if>
            <if test="workCity != null">#{workCity},</if>
            <if test="workRegion != null">#{workRegion},</if>
            <if test="detailLocation != null">#{detailLocation},</if>
            <if test="status != null">#{status},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateCustomer" parameterType="Customer">
        update oa_customer
        <trim prefix="SET" suffixOverrides=",">
            <if test="customerName != null and customerName != ''">customer_name = #{customerName},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="age != null">age = #{age},</if>
            <if test="createUser != null">create_user = #{createUser},</if>
            <if test="phonenumber != null">phonenumber = #{phonenumber},</if>
            <if test="customerSource != null">customer_source = #{customerSource},</if>
            <if test="industry != null">industry = #{industry},</if>
            <if test="level != null">level = #{level},</if>
            <if test="province != null">province = #{province},</if>
            <if test="city != null">city = #{city},</if>
            <if test="region != null">region = #{region},</if>
            <if test="workProvince != null">work_province = #{workProvince},</if>
            <if test="workCity != null">work_city = #{workCity},</if>
            <if test="workRegion != null">work_region = #{workRegion},</if>
            <if test="workLocation != null">work_location = #{workLocation},</if>
            <if test="detailLocation != null">detail_location = #{detailLocation},</if>
            <if test="status != null">status = #{status},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where customer_id = #{customerId}
    </update>

    <delete id="deleteCustomerByCustomerId" parameterType="Long">
        delete from oa_customer where customer_id = #{customerId}
    </delete>

    <delete id="deleteCustomerByCustomerIds" parameterType="String">
        delete from oa_customer where customer_id in 
        <foreach item="customerId" collection="array" open="(" separator="," close=")">
            #{customerId}
        </foreach>
    </delete>
</mapper>